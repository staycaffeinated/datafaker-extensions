/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.6/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // `java-library`
    id "org.example.library-conventions"
    alias(libs.plugins.versions)
    alias(libs.plugins.lombok.plugin)
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("maven-publish")
}

dependencies {
    implementation(libs.data.faker)
    implementation(libs.jackson.dataformat.yaml);
    implementation("org.slf4j:slf4j-api:2.0.12")


    // Use JUnit Jupiter for testing.
    testImplementation(platform(libs.junit.bom));
    testImplementation(libs.junit.jupiter)
    testRuntimeOnly(libs.junit.platform.launcher)
    testImplementation(libs.assertJ)
    testImplementation(libs.mockito)
}

jar {
    archiveBaseName = "datafaker-extensions"
    archiveVersion = "0.1.0"
    archiveAppendix = "min"
}

shadowJar {
    archiveBaseName = "datafaker-extensions"
    archiveVersion = "0.1.0"
    archiveAppendix = ""
}

// --------------------------------------------------------------------------------------------
// Using instructions from:
// https://docs.github.com/en/actions/publishing-packages/publishing-java-packages-with-gradle
//
// Run the 'gradle publish' command to publish to my repo
// --------------------------------------------------------------------------------------------
publishing {

    publications {
        javaLibrary(MavenPublication) {
            groupId = 'staycaffeinated'
            artifactId = 'datafaker-extensions'
            version = '0.1.0'

            from project.components.java
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri(findProperty("github_packages_registry_url"))
            // url = uri("https://maven.pkg.github.com/staycaffeinated/datafaker-extensions")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_REPO_TOKEN")
            }
        }
    }
}
